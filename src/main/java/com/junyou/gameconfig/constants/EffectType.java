package com.junyou.gameconfig.constants;

import java.util.Arrays;
import java.util.List;

import com.junyou.utils.KuafuConfigPropUtil;

/**
 * 效果属性枚举-注意属性名称要和策划配置的名称一样,不然会抛出IllegalArgumentException异常
 * 
 * @author LiNing
 * @author ydz
 * @email anne_0520@foxmail.com
 * @date 2014-12-19 上午11:43:41
 */
public enum EffectType {
    // ----------------------生命
    /** 生命基础值 */
    x1
    /** 生命上限增量（固定值） **/
    , x2
    /** 生命上限增量(万分之) **/
    , x3

    // ----------------------攻防
    /** 攻击值 **/
    , x4
    /** 攻击值增量 **/
    , x5
    /** 攻击值增量比例 **/
    , x6
    /** 攻击值降低百分比 **/
    , x49
    /** 防御值 **/
    , x7
    /** 防御值增量 **/
    , x8
    /** 无视防御 **/
    , x9
    /** 防御增量百分比 */
    , x43
    /** 防御降低百分比 */
    , x50

    // ----------------------命中/闪避
    /** 闪避 **/
    , x10
    /** 闪避增量 **/
    , x11
    /** 闪避增量百分比 */
    , x45
    /** 无视闪避 **/
    , x12
    /** 命中 **/
    , x13
    /** 命中增量 **/
    , x14
    /** 命中增量百分比 */
    , x46

    // ----------------------暴击
    /** 暴击几率 **/
    , x15
    /** 暴击几率增量 **/
    , x16
    /** 暴击增量百分比 */
    , x44
    /** 抗暴几率 **/
    , x17
    /** 抗暴几率增量 **/
    , x18
    /** 抗暴增量百分比 */
    , x47
    /** 暴击倍率 **/
    , x28

    // ----------------------速度
    /** 移动速度 **/
    , x19
    /** 移动速度值增量 **/
    , x20
    /** 减速概率 **/
    , x21
    /** 抗减速概率 **/
    , x22
    /** 减速时间 **/
    , x23
    /** 速度降低百分比 **/
    , x51
    /** 指定移动速度**/
    , x80

    // ----------------------伤害
    /** 伤害加成 **/
    , x24
    /** 伤害减免 **/
    , x25
    /** 伤害加成% **/
    , x26
    /** 伤害减免% **/
    , x27

    // ----------------------麻痹
    /** 麻痹几率 **/
    , x29
    /** 抗麻痹几率 **/
    , x30
    /** 麻痹时间 **/
    , x31

    // ----------------------沉默
    /** 沉默几率 **/
    , x32
    /** 抗沉默几率 **/
    , x33
    /** 沉默时间 **/
    , x34

    // ----------------------治疗
    /** 受到治疗效果变化值 **/
    , x35
    /** 受到治疗效果变化% **/
    , x36

    // ----------------------吸血
    /** 吸血几率 **/
    , x37
    /** 抗吸血几率 **/
    , x38
    /** 吸血比例 **/
    , x39

    // ----------------------其他
    /** 修炼时获得灵气倍率 **/
    , x40
    /** 经验倍率 **/
    , x41
    /** 全属性增幅(竞技场专用) **/
    , x42
    /** PK惩罚 */
    , x48

    // ----------------------神武装备被动属性
    /** 复活概率 */
    , x52
    /** 复活的血量 */
    , x53
    /** 复活CD */
    , x57
    /** 战力(不直接做面板显示，用于战力系数的计算) **/
    , zplus
    /** 防御属性增量 **/
    , x54
    /** 防御属性增量概率 **/
    , x55
    /** 防御属性增量持续时间 **/
    , x56
    /** 抵消伤害比例 **/
    , x58
    /** 抵消伤害概率 **/
    , x59
    /** 抵消伤害内置CD **/
    , x60
    /** 反伤百分比 **/
    , x61
    /** 反伤概率 **/
    , x62
    /** 反伤内置CD **/
    , x63
    /** 反伤概率减免 **/
    , x74

    // -----------------------五行属性
    /** 火属性对金属性和无属性伤害增加比例 **/
    , x64
    /** 金属性对木属性和无属性伤害增加比例 **/
    , x65
    /** 木属性对土属性和无属性伤害增加比例 **/
    , x66
    /** 土属性对水属性和无属性伤害增加比例 **/
    , x67
    /** 水属性对火属性和无属性伤害增加比例 **/
    , x68
    /** 金属性和无属性玩家对火魔神伤害减免比例 **/
    , x69
    /** 木属性和无属性玩家对金魔神伤害减免比例 **/
    , x70
    /** 土属性和无属性玩家对木魔神伤害减免比例 **/
    , x71
    /** 水属性和无属性玩家对土魔神伤害减免比例 **/
    , x72
    /** 火属性和无属性玩家对水魔神伤害减免比例 **/
    , x73;

    /** 比例/几率类均以10000为基数 **/
    private static int ATT_BASE = 10000;

    /**
     * 比例/几率类均以10000为基数
     * 
     * @return
     */
    public static int getAttBase() {
        return ATT_BASE;
    }

    /**
     * 验证是否包含 不包含时会抛出异常
     * 
     * @param effName
     */
    public static void checkContains(String effName) {
        try {
            EffectType.valueOf(effName);
        } catch (Exception e) {
            if (!KuafuConfigPropUtil.isKuafuServer()) {
                throw new RuntimeException("EffectType no Contain " + effName + " element!");
            }
        }
    }

    /**
     * @Description:获取所有神武装备的属性类型列表
     * @return
     */
    public static List<String> findSwZbQHAttrTypes() {
        return Arrays.asList(x29.name(),x30.name(), x31.name(), x52.name(), x53.name(), x20.name(), x54.name(), x55.name(), x56.name(), x57.name(), x58.name(), x59.name(), x60.name(), x61.name(), x62.name(), x63.name(),x74.name());
    }

    /**
     * 获取7个基础属性类型集合列表
     * 
     * @return
     */
    public static List<String> getBaseAttrTypes() {
        return Arrays.asList(x1.name(), x4.name(), x7.name(), x15.name(), x10.name(), x13.name(), x17.name());
    }

}